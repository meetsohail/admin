# Generated by Django 3.2.9 on 2021-12-06 21:24

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(max_length=50)),
                ('last_name', models.CharField(max_length=50)),
                ('email', models.EmailField(max_length=254, null=True, unique=True)),
                ('trial_used', models.BooleanField(default=False)),
                ('stripe_cust_id', models.CharField(max_length=255, null=True)),
                ('stripe_sub_id', models.CharField(max_length=255, null=True)),
                ('payment_method_id', models.CharField(max_length=150, null=True)),
                ('stripe_last4', models.CharField(max_length=10, null=True)),
                ('card_brand', models.CharField(max_length=50, null=True)),
                ('realtime_checks', models.IntegerField(default=0)),
                ('stats_reset_on', models.DateTimeField(auto_now_add=True)),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(auto_now_add=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Email',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email_type', models.CharField(choices=[('welcome', 'Welcome'), ('card_removed', 'Card Removed'), ('card_added', 'Card Added'), ('loginalert', 'Login Alert'), ('jobqueued', 'Job Queued'), ('jobcompleted', 'Job Completed'), ('quotareached', 'Monthly Quota Reached')], max_length=255, unique=True)),
                ('email_subject', models.CharField(default='Hello from RankSpy', max_length=255)),
                ('email_content', models.TextField()),
                ('show_footer', models.BooleanField(default=True)),
                ('is_active', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ip_address', models.CharField(max_length=255)),
                ('ip_location', models.CharField(blank=True, max_length=255, null=True)),
                ('record_type', models.CharField(default='login', max_length=50)),
                ('failed_logins', models.IntegerField(default=0)),
                ('is_blacklisted', models.BooleanField(default=False)),
                ('blacklisted_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Log',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('url', models.CharField(max_length=500)),
                ('method', models.CharField(default='POST', max_length=20)),
                ('details', models.TextField(blank=True, null=True)),
                ('status', models.IntegerField(default=200)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='logs', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Invoice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('stripe_id', models.CharField(max_length=255, null=True)),
                ('url', models.CharField(default='javascript:void(0)', max_length=500, null=True)),
                ('status', models.CharField(default='open', max_length=50)),
                ('cost', models.FloatField(null=True)),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='invoices', to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
